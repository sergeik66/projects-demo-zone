Responce: Unsupported app only token.

Steps to Test App Access in Postman
Step 1: Configure Postman for OAuth 2.0 Authentication
Open Postman:
Launch Postman and create a new request (click New > HTTP Request).

Set Up OAuth 2.0:
In the request, go to the Authorization tab.

Select Type as OAuth 2.0.

Click Get New Access Token and configure the following:
Token Name: E.g., SharePointToken.

Grant Type: Select Client Credentials (since you’re using a service principal).

Access Token URL: https://login.microsoftonline.com/{tenant_id}/oauth2/v2.0/token
Replace {tenant_id} with your Azure AD Tenant ID (e.g., 123e4567-e89b-12d3-a456-426614174000).

Client ID: Your Azure AD app’s Client ID.

Client Secret: Your Azure AD app’s Client Secret.

Scope: https://{tenant_name}.sharepoint.com/.default
Replace {tenant_name} with your SharePoint tenant name (e.g., yourdomain for yourdomain.sharepoint.com).

Client Authentication: Select Send as Basic Auth header.

Example configuration:

Token Name: SharePointToken
Grant Type: Client Credentials
Access Token URL: https://login.microsoftonline.com/123e4567-e89b-12d3-a456-426614174000/oauth2/v2.0/token
Client ID: your-client-id
Client Secret: your-client-secret
Scope: https://yourdomain.sharepoint.com/.default

Request Token:
Click Request Token. Postman will send a request to Azure AD and return an access token.

If successful, you’ll see a token in the Manage Access Tokens window. Click Use Token to attach it to your request.

The token will be added to the request headers as Authorization: Bearer <access_token>.

Step 2: Test a SharePoint REST API Call
Configure the Request:
Set the Method to GET (for reading data; use POST, PUT, etc., for other operations).

Enter the URL for a simple SharePoint REST API call to test access. Example:

https://yourdomain.sharepoint.com/sites/YourSite/_api/web?$select=Title

This retrieves the title of the SharePoint site.

Replace yourdomain and YourSite with your actual SharePoint domain and site name.

Set Headers:
In the Headers tab, ensure the following are present (Postman may auto-add the Authorization header):
Authorization: Bearer <access_token> (added by OAuth 2.0 setup).

Accept: application/json;odata=verbose (to receive JSON responses).

Send the Request:
Click Send. If the app has the correct permissions, you should receive a 200 OK response with the site’s title in the response body, like:
json

{
  "d": {
    "Title": "YourSite"
  }
}

Step 3: Troubleshoot Common Issues
401 Unauthorized:
Verify the Client ID, Client Secret, and Tenant ID are correct.

Ensure the app has the necessary SharePoint permissions (e.g., Sites.Read.All) and admin consent is granted.

Check the Scope in the token request matches your SharePoint tenant.

403 Forbidden:
Confirm the app has access to the specific site (e.g., tenant-wide permissions or site-specific permissions).

Ensure the token’s scope includes the correct SharePoint domain.

Token Expired:
Access tokens typically expire in ~1 hour. Click Get New Access Token in Postman to refresh it.

Invalid Audience:
Double-check the Access Token URL and Scope use the correct tenant ID and SharePoint domain.

Step 4: Example REST API Calls
Here are additional SharePoint REST API calls you can test in Postman to verify access:
Get All Lists:

GET https://yourdomain.sharepoint.com/sites/YourSite/_api/web/lists

